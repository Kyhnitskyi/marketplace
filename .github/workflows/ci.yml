name: Pipline

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

env:
    REGISTRY: ${{ secrets.REGISTRY }}

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4

          - name: Install Docker & Docker Compose
            run: |
              sudo apt-get update
              sudo apt-get install -y docker-compose

          - name: Cache API composer
            uses: actions/cache@v4
            with:
              path: vendor
              key: api-composer-${{ hashFiles('composer.lock') }}

          - name: Docker login
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}

          - name: Copy .env.example to .env
            run: cp .env.example .env

          - name: Populate .env with secrets
            run: |
              sed -i "s|{{DB_CONNECTION}}|${{ secrets.DB_CONNECTION }}|g" .env
              sed -i "s|{{DB_HOST}}|${{ secrets.DB_HOST }}|g" .env
              sed -i "s|{{DB_PORT}}|${{ secrets.DB_PORT }}|g" .env
              sed -i "s|{{DB_DATABASE}}|${{ secrets.DB_DATABASE }}|g" .env
              sed -i "s|{{DB_USERNAME}}|${{ secrets.DB_USERNAME }}|g" .env
              sed -i "s|{{DB_PASSWORD}}|${{ secrets.DB_PASSWORD }}|g" .env

          - name: Dev init
            run: make init-dev

          - name: Wait for database to be ready
            run: |
              docker-compose run --rm db sh -c 'while ! pg_isready -h db -p 5432; do sleep 1; done;'

          - name: Run migrations
            run: make php-migrate

          - name: Check Docker images
            run: docker images

          - name: Push dev cache images
            run: make push-dev-cache
            env:
              REGISTRY: ${{ secrets.REGISTRY }}
              IMAGE_TAG: ${{ github.sha }}
